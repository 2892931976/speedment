/**
 *
 * Copyright (c) 2006-2016, Speedment, Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); You may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package com.speedment.plugins.json;

import com.speedment.common.logger.Logger;
import com.speedment.common.logger.LoggerManager;
import com.speedment.runtime.manager.Manager;

import static java.util.Objects.requireNonNull;

/**
 * A utility class that can be used to convert Speedment entities into JSON.
 * <p>
 * Example usage:
 * <code>
 *      Employee emp = app.managerOf(Employee.class).findAny().get();
 *      String json = JsonUtil.toJson(emp);
 * </code>
 * 
 * @author Emil Forslund
 * @since  1.0.0
 */
public final class JsonUtil {
    
    private final static Logger LOGGER = LoggerManager.getLogger(JsonUtil.class);
    
    /**
     * If the specified object has a method called {@code toJson}, execute it
     * and cast the result into a {@code String}. If something goes wrong, an
     * error is logged and {@code null} is returned.
     *
     * @param <T> the type of the entity
     * @param entity the entity to enocde
     * @return the encoded string or {@code null}
     */
    @Deprecated
    public static <T> String toJson(T entity) {
        return JsonEncoder.allOf(managerOf(entity)).apply(entity);
    }
    
    private static <ENTITY> Manager<ENTITY> managerOf(ENTITY entity) {
        requireNonNull(entity);
        
        throw new UnsupportedOperationException(
            "This does no longer work since the 'manager_'-method has been removed from " + 
            "the entity interface."
        );

//        try {
//            final Method m = entity.getClass().getMethod("manager_");
//            m.setAccessible(true);
//            
//            @SuppressWarnings("unchecked")
//            final Manager<ENTITY> manager = (Manager<ENTITY>) m.invoke(entity);
//            return manager;
//        } catch (NoSuchMethodException |
//                SecurityException |
//                IllegalAccessException |
//                IllegalArgumentException |
//                InvocationTargetException |
//                ClassCastException ex) {
//
//            LOGGER.error(
//                    ex,
//                    "Could not parse entity to Json. Make sure '"
//                    + entity + "' is generated by Speedment."
//            );
//
//            return null;
//        }
    }

    /**
     * Utility classes should not be instantiated.
     */
    private JsonUtil() {}
}
